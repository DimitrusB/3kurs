{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA,QAAQ,QAAQ,EAAE,mBAAO,CAAC,2DAAa;;AAEvC,aAAa;;;;;;;;;;;ACFb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA;;AAEA,aAAa;;;;;;;;;;;;;;;;;;ACnU+B;AAC5C;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAW;AACvB;AACA,UAAU;AACV,YAAY,0DAAW;AACvB;AACA,UAAU;AACV,YAAY,0DAAW;AACvB;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;ACzDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;;;AClEoD;AACoB;AAClB;AACtD;AACO;AACP,wBAAwB,6CAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAQ;AACZ;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,MAAM;AAC5D,oBAAoB,qBAAqB;AACzC;AACA,+BAA+B,iBAAiB,gBAAgB,iBAAiB,cAAc,iBAAiB;AAChH,oDAAoD,iBAAiB,sDAAsD,iBAAiB;AAC5I,gEAAgE,iBAAiB;AACjF,wDAAwD,iBAAiB,sDAAsD,iBAAiB;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAe;AAC9B;AACA;AACA;AACA;AACA,QAAQ,4DAAgB;AACxB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4CAAK;AAC7B,SAAS;AACT,KAAK;AACL;;;;;;;UC3JA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA;UACA;UACA","sources":["webpack://3kurs/./style.css?6429","webpack://3kurs/./style.scss?6580","webpack://3kurs/./node_modules/timer-node/index.js","webpack://3kurs/./node_modules/timer-node/src/timer.js","webpack://3kurs/./src/index.js","webpack://3kurs/./src/modulFunc.js","webpack://3kurs/./src/pagecards.js","webpack://3kurs/webpack/bootstrap","webpack://3kurs/webpack/runtime/define property getters","webpack://3kurs/webpack/runtime/hasOwnProperty shorthand","webpack://3kurs/webpack/runtime/make namespace object","webpack://3kurs/webpack/before-startup","webpack://3kurs/webpack/startup","webpack://3kurs/webpack/after-startup"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","const { Timer } = require('./src/timer');\n\nexports.Timer = Timer;\n","/**\n * timer-node\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n */\n\n/**\n * @class Timer\n */\nclass Timer {\n  /**\n   * Creates a new timer\n   * @param {object} [options]\n   * @return {Timer}\n   */\n  constructor(options = {}) {\n    const {\n      label,\n      startTimestamp,\n      endTimestamp,\n      currentStartTimestamp,\n      pauseCount,\n      accumulatedMs\n    } = options;\n\n    const startTs = (startTimestamp >= 0 && startTimestamp < Date.now())\n      ? startTimestamp\n      : undefined;\n\n    const endTs = (startTs >= 0 && endTimestamp > 0 && endTimestamp > startTs)\n      ? endTimestamp\n      : undefined;\n\n    const currentTs = (currentStartTimestamp >= startTs\n      && (!endTs || currentStartTimestamp < endTs))\n      ? currentStartTimestamp\n      : startTs;\n\n    const isStarted = startTimestamp >= 0;\n    const isRunning = currentStartTimestamp !== undefined;\n    const wasPausedAtLeastOneTime = pauseCount > 0;\n    const isPaused = isStarted && !isRunning && wasPausedAtLeastOneTime;\n\n    this._label = label || '';\n    this._startTimestamp = startTs;\n    this._currentStartTimestamp = !isPaused ? currentTs : undefined;\n    this._endTimestamp = endTs;\n    this._pauseCount = pauseCount || 0;\n    this._accumulatedMs = accumulatedMs || 0;\n  }\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getLabel() {\n    return this._label;\n  }\n\n  /**\n   * @public\n   * @return {boolean}\n   */\n  isStarted() {\n    return this._startTimestamp >= 0;\n  }\n\n  /**\n   * @public\n   * @return {boolean}\n   */\n  isPaused() {\n    return this.isStarted() && this._currentStartTimestamp === undefined;\n  }\n\n  /**\n   * @public\n   * @return {boolean}\n   */\n  isStopped() {\n    return this._endTimestamp > 0;\n  }\n\n  /**\n   * @public\n   * @return {boolean}\n   */\n  isRunning() {\n    return this.isStarted() && !this.isPaused() && !this.isStopped();\n  }\n\n  /**\n   * Start the timer\n   * @public\n   * @return {Timer}\n   */\n  start() {\n    if (this.isStarted() && !this.isStopped()) {\n      return this;\n    }\n\n    this.clear();\n    this._startTimestamp = Date.now();\n    this._currentStartTimestamp = this._startTimestamp;\n    return this;\n  }\n\n  /**\n   * Pause the timer\n   * @public\n   * @return {Timer}\n   */\n  pause() {\n    if (this.isPaused() || !this.isStarted() || this.isStopped()) {\n      return this;\n    }\n\n    this._pauseCount += 1;\n    this._accumulatedMs += Date.now() - this._currentStartTimestamp;\n    this._currentStartTimestamp = undefined;\n    return this;\n  }\n\n  /**\n   * Resume the paused timer\n   * @public\n   * @return {Timer}\n   */\n  resume() {\n    if (!this.isPaused() || this.isStopped()) {\n      return this;\n    }\n\n    this._currentStartTimestamp = Date.now();\n    return this;\n  }\n\n  /**\n   * Stop the started timer\n   * @public\n   * @return {Timer}\n   */\n  stop() {\n    if (!this.isStarted()) {\n      return this;\n    }\n\n    this._endTimestamp = Date.now();\n    return this;\n  }\n\n  /**\n   * Returns the elapsed running time in milliseconds\n   * @public\n   * @return {number}\n   */\n  ms() {\n    if (!this.isStarted()) {\n      return 0;\n    }\n\n    if (this.isPaused()) {\n      return this._accumulatedMs;\n    }\n\n    const endTimestamp = this._endTimestamp || Date.now();\n    const currentMs = endTimestamp - this._currentStartTimestamp;\n    return currentMs + this._accumulatedMs;\n  }\n\n  /**\n   * Returns the total of milliseconds of pauses\n   * @public\n   * @return {number}\n   */\n  pauseMs() {\n    if (!this.isStarted()) {\n      return 0;\n    }\n\n    const endTimestamp = this._endTimestamp || Date.now();\n    return (endTimestamp - this._startTimestamp) - this.ms();\n  }\n\n  /**\n   * @private\n   * @return {object}\n   */\n  _getTime(ms) {\n    const s = Math.floor(ms / 1000);\n    const m = Math.floor(s / 60);\n    const h = Math.floor(m / 60);\n    const d = Math.floor(h / 24);\n\n    return {\n      ms: ms % 1000,\n      s: s % 60,\n      m: m % 60,\n      h: h % 24,\n      d\n    };\n  }\n\n  /**\n   * Returns the elapsed time as an object of time fractions\n   * @public\n   * @returns {object}\n   */\n  time() {\n    return this._getTime(this.ms());\n  }\n\n  /**\n   * Returns the paused time as an object of time fractions\n   * @public\n   * @returns {object}\n   */\n  pauseTime() {\n    return this._getTime(this.pauseMs());\n  }\n\n  /**\n   * Returns the number of pauses\n   * @public\n   * @returns {number}\n   */\n  pauseCount() {\n    return this._pauseCount;\n  }\n\n  /**\n   * Returns the start timestamp\n   * @public\n   * @returns {number}\n   */\n  startedAt() {\n    return this._startTimestamp;\n  }\n\n  /**\n   * Returns the stop timestamp\n   * @public\n   * @returns {number}\n   */\n  stoppedAt() {\n    return this._endTimestamp;\n  }\n\n  /**\n   * Format the recorded time using a template\n   * @public\n   * @param {string} template\n   * @returns {string}\n   */\n  format(template = '%label%d d, %h h, %m m, %s s, %ms ms') {\n    const time = this.time();\n    return template\n      .replace('%label', this._label ? `${this._label}: ` : '')\n      .replace('%ms', time.ms)\n      .replace('%s', time.s)\n      .replace('%m', time.m)\n      .replace('%h', time.h)\n      .replace('%d', time.d);\n  }\n\n  /**\n   * Clears the timer\n   * @public\n   * @return {Timer}\n   */\n  clear() {\n    this._startTimestamp = undefined;\n    this._currentStartTimestamp = undefined;\n    this._endTimestamp = undefined;\n    this._accumulatedMs = 0;\n    this._pauseCount = 0;\n    return this;\n  }\n\n  /**\n   * Serialize the timer\n   * @public\n   * @return {string}\n   */\n  serialize() {\n    return JSON.stringify({\n      startTimestamp: this._startTimestamp,\n      currentStartTimestamp: this._currentStartTimestamp,\n      endTimestamp: this._endTimestamp,\n      accumulatedMs: this._accumulatedMs,\n      pauseCount: this._pauseCount,\n      label: this._label\n    });\n  }\n\n  /**\n   * Deserialize the timer\n   * @public\n   * @param {string} serializedTime\n   * @return {Timer}\n   */\n  static deserialize(serializedTime) {\n    return new Timer(JSON.parse(serializedTime));\n  }\n\n  /**\n   * Creates a benchmark timer for a function call\n   * @public\n   * @static\n   * @param {function} fn\n   * @returns {Timer}\n   */\n  static benchmark(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Timer.benchmark expects a function');\n    }\n\n    const timer = new Timer({ label: fn.name }).start();\n    fn();\n    return timer.stop();\n  }\n}\n\nexports.Timer = Timer;\n","import { renderCards } from './pagecards.js'\r\n\r\nexport let level = null\r\nexport const renderChoosePage = () => {\r\n    const appEl = document.getElementById('app')\r\n\r\n    const choosePageHtml = `\r\n    <div class=\"center\">\r\n    <div class=\"main__window\">\r\n        <div class=\"main__window_senc\">\r\n            <p>Выбери сложность</p>\r\n        </div>\r\n        <form class=\"main__window_form\">\r\n            <div  class=\"main__window_choose\">\r\n            <input type=\"radio\" id=\"option1\" name=\"options\" value=\"Option 1\" > \r\n            <label for=\"option1\">1</label>\r\n            </div>\r\n            <div  class=\"main__window_choose\">\r\n            <input type=\"radio\" id=\"option2\" name=\"options\" value=\"Option 2\" >\r\n            <label for=\"option2\">2</label>\r\n            </div>\r\n            <div  class=\"main__window_choose\">\r\n            <input type=\"radio\" id=\"option3\" name=\"options\" value=\"Option 3\">\r\n            <label for=\"option3\">3</label>\r\n            </div>\r\n        </form>\r\n            <button class=\"main__window_butt\" id=\"chooseButton\">Старт</button>\r\n    </div>\r\n    `\r\n    appEl.innerHTML = choosePageHtml\r\n\r\n    const easyLevel = document.getElementById('option1')\r\n    const middleLevel = document.getElementById('option2')\r\n    const hardLevel = document.getElementById('option3')\r\n    const chooseButton = document.getElementById('chooseButton')\r\n    \r\n    \r\n    chooseButton.addEventListener('click', (event) => {\r\n        event.preventDefault()\r\n\r\n       \r\n\r\n        if (easyLevel.checked) {\r\n            renderCards(3)\r\n            level = 3\r\n        } else if (middleLevel.checked) {\r\n            renderCards(6)\r\n            level = 6\r\n        } else if (hardLevel.checked) {\r\n            renderCards(9)\r\n            level = 9\r\n        } else{\r\n            alert('Выберите уровень сложности!!!')\r\n            return\r\n        }\r\n    })\r\n}\r\nrenderChoosePage()\r\n","export function timerSet(timer) {\r\n    let time = 0\r\n\r\n    function updateTime() {\r\n        time++\r\n        const minutes = Math.floor(time / 60)\r\n        const seconds = Math.floor(time % 60)\r\n        const formattedTime = pad(minutes) + ':' + pad(seconds)\r\n        timer.textContent = formattedTime\r\n    }\r\n\r\n    function pad(value) {\r\n        return value < 10 ? '0' + value : value\r\n    }\r\n\r\n    const timerInterval = setInterval(updateTime, 1000)\r\n\r\n    function stopTimer() {\r\n        clearInterval(timerInterval)\r\n        return time\r\n    }\r\n\r\n    return {\r\n        stopTimer: stopTimer,\r\n    }\r\n}\r\n\r\nexport function showAllCards() {\r\n    const cardFrontElements = document.querySelectorAll('.card')\r\n    cardFrontElements.forEach((cardFrontElement) => {\r\n        cardFrontElement.classList.remove('selected')\r\n        cardFrontElement\r\n            .querySelectorAll(\r\n                '.center__suit, .symbol-top-left, .symbol-bottom-right'\r\n            )\r\n            .forEach((element) => {\r\n                element.style.display = 'block'\r\n            })\r\n    })\r\n}\r\nexport function changeCardStyle() {\r\n    const cardFrontElements = document.querySelectorAll('.card')\r\n\r\n    cardFrontElements.forEach((cardFrontElement) => {\r\n        cardFrontElement\r\n            .querySelectorAll(\r\n                '.center__suit, .symbol-top-left, .symbol-bottom-right'\r\n            )\r\n            .forEach((element) => {\r\n                element.style.display = 'none'\r\n            })\r\n\r\n        cardFrontElement.classList.add('selected')\r\n\r\n        cardFrontElement.addEventListener('click', () => {\r\n            cardFrontElement\r\n                .querySelectorAll(\r\n                    '.center__suit, .symbol-top-left, .symbol-bottom-right'\r\n                )\r\n                .forEach((element) => {\r\n                    element.style.display = ''\r\n                })\r\n\r\n            cardFrontElement.classList.remove('selected')\r\n        })\r\n    })\r\n}\r\n","import { level, renderChoosePage } from './index.js'\r\nimport { changeCardStyle, showAllCards, timerSet } from './modulFunc.js'\r\nimport { Timer, Time, TimerOptions } from 'timer-node'\r\n\r\nexport function renderCards(pairCount) {\r\n    const myTimer = new Timer()\r\n    const appEl = document.getElementById('app')\r\n    const PageHtml = `\r\n        <div class=\"center__second\">\r\n            <div class=\"second__main\">\r\n                <div>\r\n                    <span class=\"timerMin\">min</span>\r\n                    <span class=\"timerSec\">sec</span>\r\n                    <div id=\"timer\" class=\"timer\">00:00</div>\r\n                </div>\r\n                <button class=\"game_butt\" id=\"startGame\">Начать заново</button>\r\n            </div> \r\n            <div class=\"second\">\r\n                <div class=\"card-back\"></div>\r\n                <div class=\"card-deck\"></div>  \r\n            </div>\r\n           \r\n        </div>`\r\n    const width = pairCount === 3 ? '400px' : pairCount === 6 ? '650px' : 'auto'\r\n\r\n    appEl.innerHTML = PageHtml\r\n    const timer = document.getElementById('timer')\r\n    timerSet(timer)\r\n    const suits = ['clubs', 'diamonds', 'hearts', 'spades']\r\n    const ranks = ['6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']\r\n\r\n    const deck = []\r\n    for (let i = 0; i < suits.length; i++) {\r\n        for (let j = 0; j < ranks.length; j++) {\r\n            deck.push({\r\n                suit: suits[i],\r\n                rank: ranks[j],\r\n            })\r\n        }\r\n    }\r\n\r\n    const allCards = []\r\n    for (let i = 0; i < pairCount; i++) {\r\n        const randomCard = deck[Math.floor(Math.random() * deck.length)]\r\n        allCards.push(randomCard)\r\n        allCards.push(randomCard)\r\n    }\r\n\r\n    allCards.sort(() => Math.random() - 0.5)\r\n\r\n    let cardsHtml = `<div class=\"row\" style=\"width: ${width}\" >`\r\n    for (let i = 0; i < allCards.length; i++) {\r\n        cardsHtml += `\r\n            <div class=\"card ${allCards[i].rank}\" data-suit =\"${allCards[i].suit}\"data-rank=\"${allCards[i].rank}\">\r\n                <div class=\"symbol-top-left\"><div>${allCards[i].rank}</div><div class=\"block-symbol\"><img src=\"./src/img/${allCards[i].suit}.svg\"></div></div>\r\n                <div class=\"center__suit\"><img src=\"./src/img/${allCards[i].suit}.svg\"></div>\r\n                <div class=\"symbol-bottom-right\"><div>${allCards[i].rank}</div><div class=\"block-symbol\"><img src=\"./src/img/${allCards[i].suit}.svg\"></div></div>\r\n            </div>`\r\n    }\r\n    cardsHtml += '</div>'\r\n    cardsHtml += `<div class=\"popup\" id=\"popup-win\">\r\n    <div class=\"popup-content\">\r\n        <img src=\"./src/img/celebration.svg\" alt=\"Win\">\r\n        <h3 class=\"popup-header\">Вы выиграли!</h3>\r\n        <p class=\"popup-text\">Затраченное время:</p>\r\n        <p class=\"popup-time\" id=\"timeWin\"></p>\r\n        <button class=\"popup__btn\">Играть снова</button>\r\n    </div>\r\n    </div>\r\n\r\n    <div class=\"popup\" id=\"popup-lose\">\r\n    <div class=\"popup-content\">\r\n        <img src=\"./src/img/dead.svg\" alt=\"Lose\">\r\n        <h3 class=\"popup-header\">Вы проиграли!</h3>\r\n        <p class=\"popup-text\">Затраченное время:</p>\r\n        <p class=\"popup-time\" id=\"timeLose\"></p>\r\n        <button class=\"popup__btn\">Играть снова</button>\r\n    </div>\r\n    </div>`\r\n\r\n    setTimeout(changeCardStyle, 5000)\r\n    document.querySelector('.card-deck').innerHTML = cardsHtml\r\n\r\n    const goBegin = document.getElementById('startGame')\r\n    goBegin.addEventListener('click', () => {\r\n        renderChoosePage()\r\n    })\r\n\r\n    let firstCard = null\r\n    let pairsFound = null\r\n\r\n    function clickCardHandler(event) {\r\n        const card = event.target.closest('.card')\r\n        let timeValue = myTimer.format('%m.%s')\r\n\r\n        if (\r\n            !card.classList.contains('selected') ||\r\n            card.classList.contains('card-selected') ||\r\n            card.classList.contains('card-paired')\r\n        ) {\r\n            return\r\n        }\r\n        myTimer.start()\r\n\r\n        if (!firstCard) {\r\n            firstCard = card\r\n            firstCard.classList.add('card-selected')\r\n        } else {\r\n            let secondCard = card\r\n            if (firstCard && secondCard) {\r\n                if (\r\n                    firstCard.dataset.rank === secondCard.dataset.rank &&\r\n                    firstCard.dataset.suit === secondCard.dataset.suit\r\n                ) {\r\n                    firstCard.classList.add('card-paired')\r\n                    secondCard.classList.add('card-paired')\r\n                    pairsFound++\r\n                    if (pairsFound === cards.length / 2) {\r\n                        myTimer.stop()\r\n                        const popupWin = document.querySelector('#popup-win')\r\n                        popupWin.style.display = 'block'\r\n                        document.getElementById('timeWin').innerHTML = timeValue\r\n                    }\r\n                } else {\r\n                    myTimer.stop()\r\n                    const popupLose = document.querySelector('#popup-lose')\r\n                    popupLose.style.display = 'block'\r\n                    firstCard.classList.remove('card-selected')\r\n                    secondCard.classList.remove('card-selected')\r\n                    showAllCards()\r\n                    document.getElementById('timeLose').innerHTML = timeValue\r\n                }\r\n                firstCard = null\r\n                secondCard = null\r\n            } else {\r\n                firstCard = card\r\n                firstCard.classList.add('card-selected')\r\n            }\r\n        }\r\n    }\r\n\r\n    const cards = document.querySelectorAll('.card')\r\n\r\n    for (const card of cards) {\r\n        card.addEventListener('click', clickCardHandler)\r\n    }\r\n\r\n    const popupCloseBtns = document.querySelectorAll('.popup__btn')\r\n    popupCloseBtns.forEach(function (btn) {\r\n        btn.addEventListener('click', function () {\r\n            const popup = this.closest('.popup')\r\n            popup.style.display = 'none'\r\n            renderCards(level)\r\n        })\r\n    })\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./src/index.js\");\n__webpack_require__(\"./style.css\");\nvar __webpack_exports__ = __webpack_require__(\"./style.scss\");\n",""],"names":[],"sourceRoot":""}