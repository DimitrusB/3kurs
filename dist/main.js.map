{"version":3,"file":"main.js","mappings":"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","sources":["webpack://3kurs/./node_modules/timer-node/index.js","webpack://3kurs/./node_modules/timer-node/src/timer.js","webpack://3kurs/webpack/bootstrap","webpack://3kurs/webpack/runtime/define property getters","webpack://3kurs/webpack/runtime/hasOwnProperty shorthand","webpack://3kurs/./src/modulFunc.js","webpack://3kurs/./src/pagecards.js","webpack://3kurs/./src/index.js"],"sourcesContent":["const { Timer } = require('./src/timer');\n\nexports.Timer = Timer;\n","/**\n * timer-node\n * @copyright 2020 Eyas Ranjous <eyas.ranjous@gmail.com>\n * @license MIT\n */\n\n/**\n * @class Timer\n */\nclass Timer {\n  /**\n   * Creates a new timer\n   * @param {object} [options]\n   * @return {Timer}\n   */\n  constructor(options = {}) {\n    const {\n      label,\n      startTimestamp,\n      endTimestamp,\n      currentStartTimestamp,\n      pauseCount,\n      accumulatedMs\n    } = options;\n\n    const startTs = (startTimestamp >= 0 && startTimestamp < Date.now())\n      ? startTimestamp\n      : undefined;\n\n    const endTs = (startTs >= 0 && endTimestamp > 0 && endTimestamp > startTs)\n      ? endTimestamp\n      : undefined;\n\n    const currentTs = (currentStartTimestamp >= startTs\n      && (!endTs || currentStartTimestamp < endTs))\n      ? currentStartTimestamp\n      : startTs;\n\n    const isStarted = startTimestamp >= 0;\n    const isRunning = currentStartTimestamp !== undefined;\n    const wasPausedAtLeastOneTime = pauseCount > 0;\n    const isPaused = isStarted && !isRunning && wasPausedAtLeastOneTime;\n\n    this._label = label || '';\n    this._startTimestamp = startTs;\n    this._currentStartTimestamp = !isPaused ? currentTs : undefined;\n    this._endTimestamp = endTs;\n    this._pauseCount = pauseCount || 0;\n    this._accumulatedMs = accumulatedMs || 0;\n  }\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getLabel() {\n    return this._label;\n  }\n\n  /**\n   * @public\n   * @return {boolean}\n   */\n  isStarted() {\n    return this._startTimestamp >= 0;\n  }\n\n  /**\n   * @public\n   * @return {boolean}\n   */\n  isPaused() {\n    return this.isStarted() && this._currentStartTimestamp === undefined;\n  }\n\n  /**\n   * @public\n   * @return {boolean}\n   */\n  isStopped() {\n    return this._endTimestamp > 0;\n  }\n\n  /**\n   * @public\n   * @return {boolean}\n   */\n  isRunning() {\n    return this.isStarted() && !this.isPaused() && !this.isStopped();\n  }\n\n  /**\n   * Start the timer\n   * @public\n   * @return {Timer}\n   */\n  start() {\n    if (this.isStarted() && !this.isStopped()) {\n      return this;\n    }\n\n    this.clear();\n    this._startTimestamp = Date.now();\n    this._currentStartTimestamp = this._startTimestamp;\n    return this;\n  }\n\n  /**\n   * Pause the timer\n   * @public\n   * @return {Timer}\n   */\n  pause() {\n    if (this.isPaused() || !this.isStarted() || this.isStopped()) {\n      return this;\n    }\n\n    this._pauseCount += 1;\n    this._accumulatedMs += Date.now() - this._currentStartTimestamp;\n    this._currentStartTimestamp = undefined;\n    return this;\n  }\n\n  /**\n   * Resume the paused timer\n   * @public\n   * @return {Timer}\n   */\n  resume() {\n    if (!this.isPaused() || this.isStopped()) {\n      return this;\n    }\n\n    this._currentStartTimestamp = Date.now();\n    return this;\n  }\n\n  /**\n   * Stop the started timer\n   * @public\n   * @return {Timer}\n   */\n  stop() {\n    if (!this.isStarted()) {\n      return this;\n    }\n\n    this._endTimestamp = Date.now();\n    return this;\n  }\n\n  /**\n   * Returns the elapsed running time in milliseconds\n   * @public\n   * @return {number}\n   */\n  ms() {\n    if (!this.isStarted()) {\n      return 0;\n    }\n\n    if (this.isPaused()) {\n      return this._accumulatedMs;\n    }\n\n    const endTimestamp = this._endTimestamp || Date.now();\n    const currentMs = endTimestamp - this._currentStartTimestamp;\n    return currentMs + this._accumulatedMs;\n  }\n\n  /**\n   * Returns the total of milliseconds of pauses\n   * @public\n   * @return {number}\n   */\n  pauseMs() {\n    if (!this.isStarted()) {\n      return 0;\n    }\n\n    const endTimestamp = this._endTimestamp || Date.now();\n    return (endTimestamp - this._startTimestamp) - this.ms();\n  }\n\n  /**\n   * @private\n   * @return {object}\n   */\n  _getTime(ms) {\n    const s = Math.floor(ms / 1000);\n    const m = Math.floor(s / 60);\n    const h = Math.floor(m / 60);\n    const d = Math.floor(h / 24);\n\n    return {\n      ms: ms % 1000,\n      s: s % 60,\n      m: m % 60,\n      h: h % 24,\n      d\n    };\n  }\n\n  /**\n   * Returns the elapsed time as an object of time fractions\n   * @public\n   * @returns {object}\n   */\n  time() {\n    return this._getTime(this.ms());\n  }\n\n  /**\n   * Returns the paused time as an object of time fractions\n   * @public\n   * @returns {object}\n   */\n  pauseTime() {\n    return this._getTime(this.pauseMs());\n  }\n\n  /**\n   * Returns the number of pauses\n   * @public\n   * @returns {number}\n   */\n  pauseCount() {\n    return this._pauseCount;\n  }\n\n  /**\n   * Returns the start timestamp\n   * @public\n   * @returns {number}\n   */\n  startedAt() {\n    return this._startTimestamp;\n  }\n\n  /**\n   * Returns the stop timestamp\n   * @public\n   * @returns {number}\n   */\n  stoppedAt() {\n    return this._endTimestamp;\n  }\n\n  /**\n   * Format the recorded time using a template\n   * @public\n   * @param {string} template\n   * @returns {string}\n   */\n  format(template = '%label%d d, %h h, %m m, %s s, %ms ms') {\n    const time = this.time();\n    return template\n      .replace('%label', this._label ? `${this._label}: ` : '')\n      .replace('%ms', time.ms)\n      .replace('%s', time.s)\n      .replace('%m', time.m)\n      .replace('%h', time.h)\n      .replace('%d', time.d);\n  }\n\n  /**\n   * Clears the timer\n   * @public\n   * @return {Timer}\n   */\n  clear() {\n    this._startTimestamp = undefined;\n    this._currentStartTimestamp = undefined;\n    this._endTimestamp = undefined;\n    this._accumulatedMs = 0;\n    this._pauseCount = 0;\n    return this;\n  }\n\n  /**\n   * Serialize the timer\n   * @public\n   * @return {string}\n   */\n  serialize() {\n    return JSON.stringify({\n      startTimestamp: this._startTimestamp,\n      currentStartTimestamp: this._currentStartTimestamp,\n      endTimestamp: this._endTimestamp,\n      accumulatedMs: this._accumulatedMs,\n      pauseCount: this._pauseCount,\n      label: this._label\n    });\n  }\n\n  /**\n   * Deserialize the timer\n   * @public\n   * @param {string} serializedTime\n   * @return {Timer}\n   */\n  static deserialize(serializedTime) {\n    return new Timer(JSON.parse(serializedTime));\n  }\n\n  /**\n   * Creates a benchmark timer for a function call\n   * @public\n   * @static\n   * @param {function} fn\n   * @returns {Timer}\n   */\n  static benchmark(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Timer.benchmark expects a function');\n    }\n\n    const timer = new Timer({ label: fn.name }).start();\n    fn();\n    return timer.stop();\n  }\n}\n\nexports.Timer = Timer;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export function timerSet(timer) {\r\n    let time = 0\r\n\r\n    function updateTime() {\r\n        time++\r\n        const minutes = Math.floor(time / 60)\r\n        const seconds = Math.floor(time % 60)\r\n        const formattedTime = pad(minutes) + ':' + pad(seconds)\r\n        timer.textContent = formattedTime\r\n    }\r\n\r\n    function pad(value) {\r\n        return value < 10 ? '0' + value : value\r\n    }\r\n\r\n    const timerInterval = setInterval(updateTime, 1000)\r\n\r\n    function stopTimer() {\r\n        clearInterval(timerInterval)\r\n        return time\r\n    }\r\n\r\n    return {\r\n        stopTimer: stopTimer,\r\n    }\r\n}\r\n\r\nexport function showAllCards() {\r\n    const cardFrontElements = document.querySelectorAll('.card')\r\n    cardFrontElements.forEach((cardFrontElement) => {\r\n        cardFrontElement.classList.remove('selected')\r\n        cardFrontElement\r\n            .querySelectorAll(\r\n                '.center__suit, .symbol-top-left, .symbol-bottom-right'\r\n            )\r\n            .forEach((element) => {\r\n                element.style.display = 'block'\r\n            })\r\n    })\r\n}\r\nexport function changeCardStyle() {\r\n    const cardFrontElements = document.querySelectorAll('.card')\r\n\r\n    cardFrontElements.forEach((cardFrontElement) => {\r\n        cardFrontElement\r\n            .querySelectorAll(\r\n                '.center__suit, .symbol-top-left, .symbol-bottom-right'\r\n            )\r\n            .forEach((element) => {\r\n                element.style.display = 'none'\r\n            })\r\n\r\n        cardFrontElement.classList.add('selected')\r\n\r\n        cardFrontElement.addEventListener('click', () => {\r\n            cardFrontElement\r\n                .querySelectorAll(\r\n                    '.center__suit, .symbol-top-left, .symbol-bottom-right'\r\n                )\r\n                .forEach((element) => {\r\n                    element.style.display = ''\r\n                })\r\n\r\n            cardFrontElement.classList.remove('selected')\r\n        })\r\n    })\r\n}\r\n    function clickCardHandler(event) {\r\n        const card = event.target.closest('.card')\r\n        let timeValue = myTimer.format('%m.%s')\r\n\r\n        if (\r\n            !card.classList.contains('selected') ||\r\n            card.classList.contains('card-selected') ||\r\n            card.classList.contains('card-paired')\r\n        ) {\r\n            return\r\n        }\r\n        myTimer.start()\r\n\r\n        if (!firstCard) {\r\n            firstCard = card\r\n            firstCard.classList.add('card-selected')\r\n        } else {\r\n            let secondCard = card\r\n            if (firstCard && secondCard) {\r\n                if (\r\n                    firstCard.dataset.rank === secondCard.dataset.rank &&\r\n                    firstCard.dataset.suit === secondCard.dataset.suit\r\n                ) {\r\n                    firstCard.classList.add('card-paired')\r\n                    secondCard.classList.add('card-paired')\r\n                    pairsFound++\r\n                    if (pairsFound === cards.length / 2) {\r\n                        myTimer.stop()\r\n                        const popupWin = document.querySelector('#popup-win')\r\n                        popupWin.style.display = 'block'\r\n                        document.getElementById('timeWin').innerHTML = timeValue\r\n                    }\r\n                } else {\r\n                    myTimer.stop()\r\n                    const popupLose = document.querySelector('#popup-lose')\r\n                    popupLose.style.display = 'block'\r\n                    firstCard.classList.remove('card-selected')\r\n                    secondCard.classList.remove('card-selected')\r\n                    showAllCards()\r\n                    document.getElementById('timeLose').innerHTML = timeValue\r\n                }\r\n                firstCard = null\r\n                secondCard = null\r\n            } else {\r\n                firstCard = card\r\n                firstCard.classList.add('card-selected')\r\n            }\r\n        }\r\n    }","import { level, renderChoosePage } from './index.js'\r\nimport { changeCardStyle, showAllCards, timerSet } from './modulFunc.js'\r\nimport { Timer, Time, TimerOptions } from 'timer-node'\r\n\r\nexport function renderCards(pairCount) {\r\n    const myTimer = new Timer()\r\n    const appEl = document.getElementById('app')\r\n    const PageHtml = `\r\n        <div class=\"center__second\">\r\n            <div class=\"second__main\">\r\n                <div>\r\n                    <span class=\"timerMin\">min</span>\r\n                    <span class=\"timerSec\">sec</span>\r\n                    <div id=\"timer\" class=\"timer\">00:00</div>\r\n                </div>\r\n                <button class=\"game_butt\" id=\"startGame\">Начать заново</button>\r\n            </div> \r\n            <div class=\"second\">\r\n                <div class=\"card-back\"></div>\r\n                <div class=\"card-deck\"></div>  \r\n            </div>\r\n           \r\n        </div>`\r\n    const width = pairCount === 3 ? '400px' : pairCount === 6 ? '650px' : 'auto'\r\n\r\n    appEl.innerHTML = PageHtml\r\n    const timer = document.getElementById('timer')\r\n    timerSet(timer)\r\n    const suits = ['clubs', 'diamonds', 'hearts', 'spades']\r\n    const ranks = ['6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']\r\n\r\n    const deck = []\r\n    for (let i = 0; i < suits.length; i++) {\r\n        for (let j = 0; j < ranks.length; j++) {\r\n            deck.push({\r\n                suit: suits[i],\r\n                rank: ranks[j],\r\n            })\r\n        }\r\n    }\r\n\r\n    const allCards = []\r\n    for (let i = 0; i < pairCount; i++) {\r\n        const randomCard = deck[Math.floor(Math.random() * deck.length)]\r\n        allCards.push(randomCard)\r\n        allCards.push(randomCard)\r\n    }\r\n\r\n    allCards.sort(() => Math.random() - 0.5)\r\n\r\n    let cardsHtml = `<div class=\"row\" style=\"width: ${width}\" >`\r\n    for (let i = 0; i < allCards.length; i++) {\r\n        cardsHtml += `\r\n            <div class=\"card ${allCards[i].rank}\" data-suit =\"${allCards[i].suit}\"data-rank=\"${allCards[i].rank}\">\r\n                <div class=\"symbol-top-left\"><div>${allCards[i].rank}</div><div class=\"block-symbol\"><img src=\"./src/img/${allCards[i].suit}.svg\"></div></div>\r\n                <div class=\"center__suit\"><img src=\"./src/img/${allCards[i].suit}.svg\"></div>\r\n                <div class=\"symbol-bottom-right\"><div>${allCards[i].rank}</div><div class=\"block-symbol\"><img src=\"./src/img/${allCards[i].suit}.svg\"></div></div>\r\n            </div>`\r\n    }\r\n    cardsHtml += '</div>'\r\n    cardsHtml += `<div class=\"popup\" id=\"popup-win\">\r\n    <div class=\"popup-content\">\r\n        <img src=\"./src/img/celebration.svg\" alt=\"Win\" style=\"\r\n        padding-top: 26px\">\r\n        <h3 class=\"popup-header\">Вы выиграли!</h3>\r\n        <p class=\"popup-text\">Затраченное время:</p>\r\n        <p class=\"popup-time\" id=\"timeWin\"></p>\r\n        <button class=\"popup__btn\">Играть снова</button>\r\n    </div>\r\n    </div>\r\n\r\n    <div class=\"popup\" id=\"popup-lose\">\r\n    <div class=\"popup-content\">\r\n        <img src=\"./src/img/dead.svg\" alt=\"Lose\" style=\"\r\n        padding-top: 26px\">\r\n        <h3 class=\"popup-header\">Вы проиграли!</h3>\r\n        <p class=\"popup-text\">Затраченное время:</p>\r\n        <p class=\"popup-time\" id=\"timeLose\"></p>\r\n        <button class=\"popup__btn\">Играть снова</button>\r\n    </div>\r\n    </div>`\r\n\r\n    setTimeout(changeCardStyle, 5000)\r\n    document.querySelector('.card-deck').innerHTML = cardsHtml\r\n\r\n    const goBegin = document.getElementById('startGame')\r\n    goBegin.addEventListener('click', () => {\r\n        renderChoosePage()\r\n    })\r\n\r\n    let firstCard = null\r\n    let pairsFound = null\r\n\r\n    function clickCardHandler(event) {\r\n        const card = event.target.closest('.card')\r\n        let timeValue = myTimer.format('%m.%s')\r\n\r\n        if (\r\n            !card.classList.contains('selected') ||\r\n            card.classList.contains('card-selected') ||\r\n            card.classList.contains('card-paired')\r\n        ) {\r\n            return\r\n        }\r\n        myTimer.start()\r\n\r\n        if (!firstCard) {\r\n            firstCard = card\r\n            firstCard.classList.add('card-selected')\r\n        } else {\r\n            let secondCard = card\r\n            if (firstCard && secondCard) {\r\n                if (\r\n                    firstCard.dataset.rank === secondCard.dataset.rank &&\r\n                    firstCard.dataset.suit === secondCard.dataset.suit\r\n                ) {\r\n                    firstCard.classList.add('card-paired')\r\n                    secondCard.classList.add('card-paired')\r\n                    pairsFound++\r\n                    if (pairsFound === cards.length / 2) {\r\n                        myTimer.stop()\r\n                        document.querySelector('#popup-win').style.display = 'block'\r\n                        document.getElementById('timeWin').innerHTML = timeValue\r\n                    }\r\n                } else {\r\n                    myTimer.stop()\r\n                    document.querySelector('#popup-lose').style.display = 'block'\r\n                    showAllCards()\r\n                    document.getElementById('timeLose').innerHTML = timeValue\r\n                }\r\n                firstCard = null\r\n                secondCard = null\r\n            } else {\r\n                firstCard = card\r\n                firstCard.classList.add('card-selected')\r\n            }\r\n        }\r\n    }\r\n\r\n    const cards = document.querySelectorAll('.card')\r\n\r\n    for (const card of cards) {\r\n        card.addEventListener('click', clickCardHandler)\r\n    }\r\n\r\n    const popupCloseBtns = document.querySelectorAll('.popup__btn')\r\n    popupCloseBtns.forEach(function (btn) {\r\n        btn.addEventListener('click', function () {\r\n            const popup = this.closest('.popup')\r\n            popup.style.display = 'none'\r\n            renderCards(level)\r\n        })\r\n    })\r\n}\r\n","import { renderCards } from './pagecards.js'\r\n\r\nexport let level = null\r\nexport const renderChoosePage = () => {\r\n    const appEl = document.getElementById('app')\r\n\r\n    const choosePageHtml = `\r\n    <div class=\"center\">\r\n    <div class=\"main__window\">\r\n        <div class=\"main__window_senc\">\r\n            <p>Выбери сложность</p>\r\n        </div>\r\n        <form class=\"main__window_form\">\r\n            <div  class=\"main__window_choose\">\r\n            <input type=\"radio\" id=\"option1\" name=\"options\" value=\"Option 1\" > \r\n            <label for=\"option1\">1</label>\r\n            </div>\r\n            <div  class=\"main__window_choose\">\r\n            <input type=\"radio\" id=\"option2\" name=\"options\" value=\"Option 2\" >\r\n            <label for=\"option2\">2</label>\r\n            </div>\r\n            <div  class=\"main__window_choose\">\r\n            <input type=\"radio\" id=\"option3\" name=\"options\" value=\"Option 3\">\r\n            <label for=\"option3\">3</label>\r\n            </div>\r\n        </form>\r\n            <button class=\"main__window_butt\" id=\"chooseButton\">Старт</button>\r\n    </div>\r\n    `\r\n    appEl.innerHTML = choosePageHtml\r\n\r\n    const easyLevel = document.getElementById('option1')\r\n    const middleLevel = document.getElementById('option2')\r\n    const hardLevel = document.getElementById('option3')\r\n    const chooseButton = document.getElementById('chooseButton')\r\n    \r\n    \r\n    chooseButton.addEventListener('click', (event) => {\r\n        event.preventDefault()\r\n\r\n       \r\n\r\n        if (easyLevel.checked) {\r\n            renderCards(3)\r\n            level = 3\r\n        } else if (middleLevel.checked) {\r\n            renderCards(6)\r\n            level = 6\r\n        } else if (hardLevel.checked) {\r\n            renderCards(9)\r\n            level = 9\r\n        } else{\r\n            alert('Выберите уровень сложности!!!')\r\n            return\r\n        }\r\n    })\r\n}\r\nrenderChoosePage()\r\n"],"names":["Timer","exports","constructor","options","label","startTimestamp","endTimestamp","currentStartTimestamp","pauseCount","accumulatedMs","startTs","Date","now","undefined","endTs","currentTs","isPaused","this","_label","_startTimestamp","_currentStartTimestamp","_endTimestamp","_pauseCount","_accumulatedMs","getLabel","isStarted","isStopped","isRunning","start","clear","pause","resume","stop","ms","pauseMs","_getTime","s","Math","floor","m","h","d","time","pauseTime","startedAt","stoppedAt","format","template","replace","serialize","JSON","stringify","static","serializedTime","parse","fn","Error","timer","name","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","changeCardStyle","document","querySelectorAll","forEach","cardFrontElement","element","style","display","classList","add","addEventListener","remove","renderCards","pairCount","myTimer","width","getElementById","innerHTML","pad","value","setInterval","minutes","seconds","formattedTime","textContent","timerSet","suits","ranks","deck","i","length","j","push","suit","rank","allCards","randomCard","random","sort","cardsHtml","setTimeout","querySelector","renderChoosePage","firstCard","pairsFound","clickCardHandler","event","card","target","closest","timeValue","contains","secondCard","dataset","cards","btn","level","easyLevel","middleLevel","hardLevel","preventDefault","checked","alert"],"sourceRoot":""}